@model IEnumerable<DUTClinicManagement.Models.Booking>
@using DUTClinicManagement.Models 

@{
    ViewData["Title"] = "Appointments";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<head>
    <style>

        .btn-details,
        .btn-cancel {
            font-size: 1rem;
            padding: 6px 20px;
            border-radius: 8px;
        }

        .btn-details {
            background-color: #010123; 
            color: white;
            border: none;
            margin-right: 6px;
        }

        .btn-details:hover {
            background-color: #580a9e;
        }

        .btn-cancel {
            background-color: transparent;
            border: 1px solid #ff4d4d; 
            color: #ff4d4d;
        }

        .btn-cancel:hover {
            background-color: #ff4d4d;
            color: white;
        }

        .filter-btn.active {
            background-color: #022D36;
            color: white;
        }

        .appointment-card {
            border: 3px solid;
            border-radius: 15px;
            border-image-slice: 1;
            border-image-source: linear-gradient(135deg, #6a0dad, #8B0000, #33001c);
            background-color: white;
            padding: 1rem;
            box-sizing: border-box;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }


        .filter-btn i {
            color: #8B0000 !important;
        }

        .appointment-header {
            font-weight: 600;
            color: #33001c;
        }

        .badge-status {
            background-color: #8B0000;
            color: white;
            padding: 0.25em 0.5em;
            border-radius: 0.5rem;
            font-size: 0.875rem;
        }
    </style>
</head>

<br />

<div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" 
         style="background: linear-gradient(90deg, #010123 0%, #8B0000 50%, #FF0000 100%);
                border-radius: 0.75rem;">
        <div class="d-flex align-items-center">
            <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
                <i class="bi bi-chevron-left me-1"></i> Back
            </a>
            <h2 class="mb-0 text-white">My Appointments</h2>
        </div>
        <div>
            <button class="btn btn-light btn-sm me-2 filter-btn active" data-filter="Assigned">
                <i class="bi bi-clock-history"></i> <span class="btn-text ms-1">Assigned</span>
            </button>

            <button class="btn btn-light btn-sm me-2 filter-btn" data-filter="Completed">
                <i class="bi bi-check-circle" style="color:#8B0000;"></i> <span class="btn-text ms-1">Completed</span>
            </button>
        </div>
    </div>

    <div class="d-flex justify-content-end align-items-center mb-4 px-3">
        <a href="@Url.Action("MakeAppointment", "Appointments")" class="btn btn-primary" id="addButton">
            <i class="bi bi-plus-circle me-1"></i> New Appointment
        </a>
    </div>

    @if (TempData["Message"] != null)
    {
        <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
            @Html.Raw(TempData["Message"])
            <span class="close" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </span>
        </div>
    }

    <div class="alert alert-info text-center" id="noDataAlert" style="display:none;">
        You have no appointments matching the selected filter.
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            You have no appointments.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="appointmentsContainer">
            @foreach (var booking in Model)
            {
                var cancelModalId = $"cancelModal_{booking.BookingId}";
                var detailsModalId = $"detailsModal_{booking.BookingId}";

                <div class="col appointment-card-wrapper" data-status="@booking.Status">
                    <div class="card appointment-card rounded-4 p-3 h-100">
                        <div class="card-body pb-5">
                            <h5 class="appointment-header mb-3">@booking.MedicalCondition</h5>
                            <p class="mb-1"><strong>Date:</strong> @booking.BookForDate.ToString("MMMM dd, yyyy")</p>
                            <p class="mb-1"><strong>Time:</strong> @booking.BookForTimeSlot</p>
                            <p class="mb-1">
                                <strong>Status:</strong> 
                                <span class="badge badge-status">@booking.Status</span>
                            </p>

                            <dt class="col-sm-4 text-start">Doctor</dt>
                            <dd class="col-sm-8 text-start">
                                @if (booking.AssignedTo != null)
                                {
                                    @($"{booking.AssignedTo.FirstName} {booking.AssignedTo.LastName}")
                                }
                                else
                                {
                                    <span class="text-muted">Not Assigned</span>
                                }
                            </dd>
                        </div>
                        <div class="card-actions d-flex justify-content-end">
                            @if (booking.Status == BookingStatus.Completed)
                            {
                                <button class="btn btn-details" data-bs-toggle="modal" data-bs-target="#@detailsModalId">Details</button>
                            }
                            else
                            {
                                <button class="btn btn-details me-2" data-bs-toggle="modal" data-bs-target="#@detailsModalId">Details</button>
                                <button class="btn btn-cancel" data-bs-toggle="modal" data-bs-target="#@cancelModalId">Cancel</button>
                            }
                        </div>
                    </div>

                    <div class="modal fade" id="@cancelModalId" tabindex="-1" aria-labelledby="@($"{cancelModalId}_Label")" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content rounded-4">
                                <div class="modal-header modal-header-cancel">
                                    <h5 class="modal-title" id="@($"{cancelModalId}_Label")">Cancel Appointment</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <dl class="row">
                                        <dt class="col-sm-4">Medical Condition</dt>
                                        <dd class="col-sm-8">@booking.MedicalCondition</dd>

                                        <dt class="col-sm-4">Date</dt>
                                        <dd class="col-sm-8">@booking.BookForDate.ToString("MMMM dd, yyyy")</dd>

                                        <dt class="col-sm-4">Time</dt>
                                        <dd class="col-sm-8">@booking.BookForTimeSlot</dd>

                                        <dt class="col-sm-4">Status</dt>
                                        <dd class="col-sm-8">@booking.Status</dd>

                                        <dt class="col-sm-4">Notes</dt>
                                        <dd class="col-sm-8">@booking.AdditionalNotes</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade" id="@detailsModalId" tabindex="-1" aria-labelledby="@($"{detailsModalId}_Label")" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-md">
                            <div class="modal-content rounded-4">
                                <div class="modal-header modal-header-custom">
                                    <h5 class="modal-title" id="@($"{detailsModalId}_Label")">Appointment Details</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body d-flex flex-column align-items-center">
                                    <dl class="details-list row">
                                        <dt class="col-sm-4 text-start">Medical Condition</dt>
                                        <dd class="col-sm-8 text-start">@booking.MedicalCondition</dd>

                                        <dt class="col-sm-4 text-start">Date</dt>
                                        <dd class="col-sm-8 text-start">@booking.BookForDate.ToString("MMMM dd, yyyy")</dd>

                                        <dt class="col-sm-4 text-start">Time</dt>
                                        <dd class="col-sm-8 text-start">@booking.BookForTimeSlot</dd>

                                        <dt class="col-sm-4 text-start">Status</dt>
                                        <dd class="col-sm-8 text-start">@booking.Status</dd>

                                        <dt class="col-sm-4 text-start">Doctor</dt>
                                        <dd class="col-sm-8 text-start">
                                            @if (booking.AssignedTo != null)
                                            {
                                                @($"{booking.AssignedTo.FirstName} {booking.AssignedTo.LastName}")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not Assigned</span>
                                            }
                                        </dd>

                                        <dt class="col-sm-4 text-start">Notes</dt>
                                        <dd class="col-sm-8 text-start">@booking.AdditionalNotes</dd>
                                    </dl>
                                </div>
                                @if (booking.Status != BookingStatus.Completed)
                                {
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterButtons = document.querySelectorAll('.filter-btn');
            const appointmentCards = document.querySelectorAll('.appointment-card-wrapper');
            const noDataAlert = document.getElementById('noDataAlert');

            function normalize(text) {
                return text?.toLowerCase().trim();
            }

            function filterAppointments(status) {
                const normalizedStatus = normalize(status);
                let anyVisible = false;

                appointmentCards.forEach(card => {
                    const cardStatus = normalize(card.getAttribute('data-status'));
                    if (cardStatus === normalizedStatus) {
                        card.style.display = '';
                        anyVisible = true;
                    } else {
                        card.style.display = 'none';
                    }
                });

                if (noDataAlert) {
                    noDataAlert.style.display = anyVisible ? 'none' : 'block';
                }

                filterButtons.forEach(btn => {
                    const btnStatus = normalize(btn.getAttribute('data-filter'));
                    btn.classList.toggle('active', btnStatus === normalizedStatus);
                });
            }

            filterAppointments('Assigned');

            filterButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const filter = button.getAttribute('data-filter');
                    filterAppointments(filter);
                });
            });
        });

        setTimeout(function () {
            document.getElementById("tempDataMessage").style.display = "none";
        }, 7000);
    </script>
}
