@model IEnumerable<DUTClinicManagement.Models.PatientMedicalHistory>
@inject DUTClinicManagement.Interfaces.IEncryptionService encryptionService

@{
    ViewData["Title"] = "Medical history";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}
<br>
<div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" 
     style="background: linear-gradient(90deg, #010123 0%, #8B0000 50%, #FF0000 100%);
            border-radius: 0.75rem;">
    <div class="d-flex align-items-center">
        <a asp-controller="Home" asp-action="Index" class="text-white text-decoration-none d-inline-flex align-items-center back-link me-3">
            <i class="bi bi-chevron-left me-1"></i> Back
        </a>
         <h2 class="mb-0 text-white">Medical Histories</h2>
    </div>
</div>

<div class="container-fluid px-4 text-center" style="margin-top: 10px;">
    <p id="initialInstruction" class="mb-3 fw-semibold" style="font-size: 1.2rem; color: #010123;">
        Use the search bar below to find a patient's medical history by booking reference number.
    </p>

    <div id="scanBtn">
        <div class="input-group w-50 mx-auto">
            <input type="text" class="form-control" placeholder="Enter Booking Reference..." id="qrSearchInput" maxlength="13" />
            <button id="searchBtn" class="btn btn-outline-secondary" type="button">Search</button>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info text-center">
        No appointments found.
    </div>
}
else
{
    <div class="container-fluid px-4" id="appointmentsTableContainer">
        <div class="table-responsive">
            <table class="table table-striped table-borderless" id="appointmentsTable">
                <thead class="custom-thead">
                    <tr>
                        <th>Patient</th>
                        <th>Id number</th>
                        <th>Email address</th>
                        <th>Phone number</th>
                        <th>Address</th>
                        <th>Created At</th>
                        <th>Access code</th>
                        @if (User.IsInRole("System Administrator"))
                        {
                            <th>Qr code</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var medicalHistory in Model)
                    {
                        var encryptedMedicalHistoryId = encryptionService.Encrypt(medicalHistory.PatientMedicalHistoryId);

                        <tr class="clickable-row ellipsis" data-id="@encryptedMedicalHistoryId" data-access="@(medicalHistory.AccessCode?.ToLower() ?? "n/a")">
                            <td>@($"{medicalHistory.Patient?.FirstName ?? "N/A"} {medicalHistory.Patient?.LastName ?? ""}")</td>
                            <td>@(medicalHistory.Patient?.IdNumber ?? "N/A")</td>
                            <td>@(medicalHistory.Patient?.Email ?? "N/A")</td>
                            <td>@(medicalHistory.Patient?.PhoneNumber ?? "N/A")</td>
                            <td>@(medicalHistory.Patient?.Address ?? "N/A")</td>
                            <td>@(medicalHistory.CreatedAt.ToString("yyyy-MM-dd HH:mm"))</td>
                            <td>@(medicalHistory.AccessCode ?? "N/A")</td>
                            @if (User.IsInRole("System Administrator"))
                            {
                                <td>
                                    @if (medicalHistory.QrCodeImage != null)
                                    {
                                        var base64 = Convert.ToBase64String(@medicalHistory.QrCodeImage);
                                        var imgSrc = $"data:image/png;base64,{base64}";
                                        <img src="@imgSrc" alt="QR Code" style="width:80px; height:80px;" />
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
<div id="noResultsMessage" class="text-center mt-5" style="display:none;">
    <h2 style="color: #888; font-weight: 600;">No medical record found for the entered reference.</h2>
    <p style="font-size: 1.2rem; color: #bbb;">Please double-check the booking reference number and try again.</p>
</div>

<div id="retrySearchBtnContainer" class="text-center mt-3" style="display: none;">
    <button id="retrySearchBtn" class="btn btn-primary">
        <i class="bi bi-arrow-repeat me-2"></i>Retry Search
    </button>
</div>
<div id="searchAgainContainer" class="text-center mt-4">
    <button id="searchAgainBtn" class="btn btn-outline-primary">
        <i class="bi bi-search me-1"></i>Search Again
    </button>
</div>
}

<script>
    const tableContainer = document.getElementById("appointmentsTableContainer");
    const qrInput = document.getElementById("qrSearchInput");
    const noResultsMessage = document.getElementById("noResultsMessage");
    const searchBtn = document.getElementById("searchBtn");
    const scanBtn = document.getElementById("scanBtn");
    const retryBtnContainer = document.getElementById("retrySearchBtnContainer");
    const retryBtn = document.getElementById("retrySearchBtn");
    const searchAgainBtn = document.getElementById("searchAgainBtn");
    const searchAgainContainer = document.getElementById("searchAgainContainer");
    const initialInstruction = document.getElementById("initialInstruction");

    let hasSearchedAndFoundResults = false;

    function sanitizeInput(input) {
        return input.replace(/\s/g, '').toLowerCase().slice(0, 13);
    }

    function filterTable(rawQuery) {
        const query = sanitizeInput(rawQuery);
        if (!query) {
            hideAllShowNoResults();
            return;
        }

        const rows = document.querySelectorAll("#appointmentsTable tbody tr");
        let anyVisible = false;

        rows.forEach(row => {
            const accessCode = row.getAttribute("data-access") ?? '';
            if (accessCode === query) {
                row.style.display = "";
                anyVisible = true;
            } else {
                row.style.display = "none";
            }
        });

        if (anyVisible) {
            hasSearchedAndFoundResults = true;
            showTable();
        } else {
            hideAllShowNoResults();
        }
    }

    function hideAllShowNoResults() {
        tableContainer.style.display = "none";
        noResultsMessage.style.display = "block";
        retryBtnContainer.style.display = "block";
        scanBtn.style.display = "none";
        initialInstruction.style.display = "none";
        if (searchAgainContainer) searchAgainContainer.style.display = "none";
    }

    function showSearchUI() {
        noResultsMessage.style.display = "none";
        retryBtnContainer.style.display = "none";
        scanBtn.style.display = "block";
        initialInstruction.style.display = "block";
        qrInput.value = "";
        qrInput.focus();
    }

    function showTable() {
        tableContainer.style.display = "block";
        noResultsMessage.style.display = "none";
        retryBtnContainer.style.display = "none";
        scanBtn.style.display = "none";
        initialInstruction.style.display = "none";

        if (hasSearchedAndFoundResults && searchAgainContainer)
            searchAgainContainer.style.display = "block";
    }

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('#appointmentsTable .clickable-row').forEach(row => {
            row.addEventListener('click', function () {
                const encryptedMedicalHistoryId = this.getAttribute('data-id');
                const url = '@Url.Action("PatientMedicalRecord", "MedicalHistories")';
                window.location.href = `${url}?medicalHistoryId=${encodeURIComponent(encryptedMedicalHistoryId)}`;
            });
        });

        searchBtn.addEventListener("click", () => {
            filterTable(qrInput.value);
        });

        qrInput.addEventListener("keyup", function (event) {
            if (event.key === "Enter") {
                filterTable(qrInput.value);
            }
        });

        qrInput.addEventListener("input", function () {
            this.value = this.value.replace(/\s/g, '').slice(0, 13);
        });

        retryBtn.addEventListener("click", () => {
            showSearchUI();
        });

        if (searchAgainBtn) {
            searchAgainBtn.addEventListener("click", () => {
                showSearchUI();
                tableContainer.style.display = "none";
                if (searchAgainContainer) searchAgainContainer.style.display = "none";
            });
        }

        if (searchAgainContainer)
            searchAgainContainer.style.display = "none";
    });
</script>

